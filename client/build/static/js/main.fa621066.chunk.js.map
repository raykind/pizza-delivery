{"version":3,"sources":["redux/actions.js","redux/types.js","hooks/http.hook.js","hooks/message.hook.js","components/loader/Loader.js","components/pizza-card/PizzaCard.js","pages/menu/MenuPage.js","components/navbar/Navbar.js","components/pizza-cart-row/PizzaCartRow.js","pages/cart/Cart.js","components/address/Address.js","components/bill/Bill.js","pages/make-order/MakeOrder.js","components/order-box/OrderBox.js","pages/orders/Orders.js","pages/auth/AuthPage.js","App.js","routes.js","serviceWorker.js","redux/reducer.js","index.js"],"names":["login","data","type","payload","getAllPizza","request","dispatch","a","setTimeout","e","console","log","addToCart","pizza","removeFromCart","useHttp","useState","loading","setLoading","error","setError","useCallback","url","method","body","headers","JSON","stringify","fetch","response","json","ok","Error","message","clearError","useMessage","text","window","M","toast","html","Loader","className","mapDispatchToProps","connect","isAdded","setIsAdded","useEffect","cartPizzaIds","parse","localStorage","getItem","length","findIndex","id","_id","name","description","weight","src","photoUrl","alt","onClick","cost","state","cart","useDispatch","forEach","pizzaId","pizzaObject","find","item","map","pizzaItem","key","logout","token","history","useHistory","to","href","event","preventDefault","push","PizzaCartRow","onDelete","total","setTotal","deletePizza","recalculateTotal","withoutPizzaId","reduce","sum","Address","props","handleFieldChange","setState","target","value","proceedOrder","setAddress","country","district","city","street","building","flat","room","updateTextFields","placeholder","onChange","this","htmlFor","React","Component","Bill","address","pizzaDetails","userId","savedCart","isComplete","setIsComplete","onAddressFilled","addressObject","addressStr","orderData","order","currentPizza","orders","setOrders","fetchedOrders","fetchOrders","email","password","form","setForm","changeHandler","registerHandler","loginHandler","userObject","setItem","style","marginRight","disabled","routes","path","exact","Boolean","location","hostname","match","initialState","store","createStore","action","removeItem","newExtendedCart","newCollapsedCart","filter","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","app","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fa621066.chunk.js","sourcesContent":["import {\n  ADD_TO_CART, CLEAR_CART,\n  GET_ALL_PIZZA_LOADED,\n  LOGIN, LOGOUT, REMOVE_FROM_CART,\n} from \"./types\";\n\n\nexport function login(data) {\n  return {\n    type: LOGIN,\n    payload: data\n  }\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  }\n}\n\nexport function getAllPizza(request) {\n  return async dispatch => {\n    try {\n      setTimeout(async () => {\n        const data = await request('/api/menu/getAllPizza', 'GET')\n\n        dispatch({ type: GET_ALL_PIZZA_LOADED, payload: data })\n      }, 2000)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport function addToCart(pizza) {\n  return {\n    type: ADD_TO_CART,\n    payload: pizza\n  }\n}\n\nexport function removeFromCart(pizza) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: pizza\n  }\n}\n\nexport function clearCart() {\n  return {\n    type: CLEAR_CART\n  }\n}\n\n","export const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\nexport const GET_ALL_PIZZA_LOADED = 'GET/PIZZA/ALL_LOADED'\nexport const ADD_TO_CART = 'ADD/TO_CART'\nexport const REMOVE_FROM_CART = 'REMOVE/FROM_CART'\nexport const CLEAR_CART = 'REMOVE/CART'\n","import {useState, useCallback} from 'react'\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true)\n    try {\n      if (body) {\n        body = JSON.stringify(body)\n        headers['Content-Type'] = 'application/json'\n      }\n\n      const response = await fetch(url, {method, body, headers})\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Something goes wrong')\n      }\n\n      setLoading(false)\n\n      return data\n    } catch (e) {\n      setLoading(false)\n      setError(e.message)\n      throw e\n    }\n  }, [])\n\n  const clearError = useCallback(() => setError(null), [])\n\n  return { loading, request, error, clearError }\n}\n","import {useCallback} from 'react'\n\nexport const useMessage = () => {\n  return useCallback(text => {\n    if (window.M && text) {\n      window.M.toast({ html: text })\n    }\n  }, [])\n}\n","import React from \"react\";\nimport './Loader.scss'\n\nexport const Loader = () => {\n  return (\n    <div className=\"circle-loader-red\">\n      <div className=\"preloader-wrapper active\">\n        <div className=\"spinner-layer spinner-red-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\" />\n          </div>\n          <div className=\"gap-patch\">\n            <div className=\"circle\" />\n          </div>\n          <div className=\"circle-clipper right\">\n            <div className=\"circle\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from \"react\"\nimport './PizzaCard.scss'\nimport {connect} from \"react-redux\";\nimport {addToCart, removeFromCart} from \"../../redux/actions\";\n\nconst PizzaCard = ({ pizza, addToCart, removeFromCart }) => {\n  const [isAdded, setIsAdded] = useState(false)\n\n  const onAddClickHandler = () => {\n    if (isAdded) {\n      removeFromCart(pizza)\n    } else {\n      addToCart(pizza)\n    }\n    setIsAdded(!isAdded)\n  }\n\n  useEffect(() => {\n    const cartPizzaIds = JSON.parse(localStorage.getItem('cartPizzaIds'))\n\n    if (cartPizzaIds && cartPizzaIds.length) {\n      if (cartPizzaIds.findIndex(id => id === pizza._id) !== -1) {\n        setIsAdded(true)\n      }\n    }\n  }, [pizza, addToCart])\n\n  return (\n    <div className=\"pizza-box z-depth-1\">\n      <div className=\"row\">\n        <div className=\"left-part\">\n          <span className=\"pizza-title\">{pizza.name}</span>\n          <span className=\"pizza-description\">{pizza.description}</span>\n          <span className=\"pizza-weight\">{pizza.weight}g</span>\n        </div>\n        <div className=\"right-part\">\n          <div className=\"pizza-image\">\n            <img  src={pizza.photoUrl} alt=\"\" />\n          </div>\n          <button\n            className={`waves-effect waves-light btn add-to-cart-btn \n              ${isAdded ? 'light-green darken-1' : 'purple darken-4'}`\n            }\n            onClick={onAddClickHandler}\n          >\n          {\n            isAdded\n            ? <>added</>\n            : <>add to cart: +<b>{pizza.cost}$</b></>\n          }\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addToCart,\n  removeFromCart\n}\n\nexport default connect(null, mapDispatchToProps)(PizzaCard)\n","import React, {useEffect} from \"react\";\nimport {addToCart, getAllPizza} from \"../../redux/actions\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useMessage} from \"../../hooks/message.hook\";\nimport {Loader} from \"../../components/loader/Loader\";\nimport './MenuPage.scss'\nimport PizzaCard from \"../../components/pizza-card/PizzaCard\";\n\nconst MenuPage = ({ pizza, addToCart, cart }) => {\n  const {error, clearError} = useHttp()\n  const message = useMessage()\n  const dispatch = useDispatch()\n  const {request} = useHttp()\n\n  useEffect(() => {\n    dispatch(getAllPizza(request))\n  }, [dispatch, request])\n\n  useEffect(() => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n  useEffect(() => {\n    const cartPizzaIds = JSON.parse(localStorage.getItem('cartPizzaIds'))\n\n    if (pizza.length && cartPizzaIds && cartPizzaIds.length) {\n      cartPizzaIds.forEach(pizzaId => {\n        const pizzaObject = pizza.find(item => item._id === pizzaId)\n        if (pizzaObject && cart.findIndex(item => item._id === pizzaObject._id) === -1) {\n          addToCart(pizzaObject)\n        }\n      })\n    }\n  }, [pizza, cart, addToCart])\n\n\n  if (!pizza.length) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"pizza-menu-window\">\n      <h2>Pizza Catalog</h2>\n      <div className=\"pizza-catalog\">\n        {pizza.map(pizzaItem => <PizzaCard key={pizzaItem._id} pizza={pizzaItem} /> )}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  pizza: state.pizza,\n  cart: state.cart\n})\n\nconst mapDispatchToProps = {\n  addToCart\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuPage)\n","import React from \"react\";\nimport {NavLink, useHistory} from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/actions\";\nimport './Navbar.scss'\n\nconst Navbar = ({ token, cart, logout }) => {\n  const history = useHistory()\n\n  const logoutHandler = event => {\n    event.preventDefault()\n    logout()\n    history.push('/')\n  }\n\n  return (\n    <div className=\"navbar-fixed\">\n      <nav>\n        <div className=\"nav-wrapper deep-purple accent-1\">\n          <span className=\"brand-logo\">Innoscripta Pizza Delivery Service</span>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li><NavLink to=\"/menu\">Menu</NavLink></li>\n            <li><NavLink to=\"/cart\">Cart{\n              cart.length\n                ? <span className=\"order-count\">{cart.length}</span>\n                : ''\n            }</NavLink></li>\n            { token && <li><NavLink to=\"/orders\">Your Orders</NavLink></li>}\n            { token\n              ? <li><a href=\"/\" onClick={logoutHandler}>Log Out</a></li>\n              : <li><NavLink to=\"/login\">Log In</NavLink></li>\n            }\n          </ul>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  token: state.token,\n  cart: state.cart\n})\n\nconst mapDispatchToProps = {\n  logout\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\n","import React from \"react\";\nimport './PizzaCartRow.scss'\n\nconst PizzaCartRow = ({ pizza, onDelete }) => {\n  return (\n    <div className=\"row pizza-cart-row\">\n      <div className=\"pizza-description z-depth-1\">\n        <img className=\"pizza-image\" src={pizza.photoUrl} alt=\"\" />\n        <span className=\"pizza-name\">{pizza.name}</span>\n        <span className=\"pizza-weight\">{pizza.weight}g</span>\n        <div className=\"pizza-cost purple darken-4\"><b>{pizza.cost}$</b></div>\n        <div className=\"spacer\"/>\n        <button\n          className=\"waves-effect waves-light red darken-1 delete-btn btn\"\n          onClick={onDelete}\n        >delete</button>\n      </div>\n    </div>\n  )\n}\n\nexport default PizzaCartRow\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {useHistory} from 'react-router-dom'\nimport './Cart.scss'\nimport {addToCart, removeFromCart} from \"../../redux/actions\";\nimport PizzaCartRow from \"../../components/pizza-cart-row/PizzaCartRow\";\n\nconst Cart = ({ cart, pizza, addToCart, removeFromCart }) => {\n  const history = useHistory()\n  const [total, setTotal] = useState(0)\n\n  const deletePizza = pizzaId => {\n    removeFromCart(pizza.find(item => item._id === pizzaId))\n    setTotal(recalculateTotal(pizzaId))\n  }\n\n  const recalculateTotal = useCallback((withoutPizzaId = null) => {\n    return cart.reduce((sum, pizza) => {\n      if (pizza._id === withoutPizzaId) {\n        return sum\n      }\n      return sum + pizza.cost\n    }, 0)\n  }, [cart])\n\n  const makeOrder = () => {\n    history.push('/make-order')\n  }\n\n  useEffect(() => {\n    if (!cart.length) {\n      const cartPizzaIds = JSON.parse(localStorage.getItem('cartPizzaIds'))\n\n      if (pizza.length && cartPizzaIds && cartPizzaIds.length) {\n        cartPizzaIds.forEach(pizzaId => {\n          addToCart(pizza.find(item => item._id === pizzaId))\n        })\n      }\n    }\n  }, [addToCart, cart, pizza])\n\n  useEffect(() => {\n    if (cart.length) {\n      if (total === 0) {\n        setTotal(recalculateTotal())\n      }\n    }\n  }, [cart, total, recalculateTotal])\n\n  return (\n    <div className=\"cart-page\">\n      {!cart.length\n        ? <h2>Your cart is empty</h2>\n        : (\n          <>\n            <h2>Cart</h2>\n            <div className=\"cart-table\">\n              {cart.map(pizza =>\n                <PizzaCartRow\n                  pizza={pizza}\n                  key={pizza._id}\n                  onDelete={() => deletePizza(pizza._id)}\n                />\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"spacer\" />\n              <h3>Total: ${total + 3}</h3>\n              <h6>(3$ Delivery)</h6>\n              <button\n                className=\"waves-effect waves-light purple darken-4 order-btn btn\"\n                onClick={makeOrder}\n              >make order</button>\n            </div>\n          </>\n        )}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart,\n  pizza: state.pizza\n})\n\nconst mapDispatchToProps = {\n  addToCart,\n  removeFromCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\n","import React from \"react\";\nimport './Address.scss'\n\nclass Address extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      country: '',\n      district: '',\n      city: '',\n      street: '',\n      building: '',\n      flat: '',\n      room: ''\n    }\n  }\n\n  componentDidMount() {\n    window.M.updateTextFields()\n  }\n\n  handleFieldChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  proceedOrder = () => {\n    this.props.setAddress(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"address-edit\">\n        <h2>Please, fill in the shipping address fields</h2>\n        <div className=\"row\">\n          <div className=\"country-field input-field\">\n            <input\n              placeholder=\"Country\"\n              id=\"country\"\n              type=\"text\"\n              className=\"validate\"\n              name=\"country\"\n              onChange={this.handleFieldChange}\n            />\n            <label htmlFor=\"country\">Country</label>\n          </div>\n          <div className=\"district-field input-field\">\n            <input\n              placeholder=\"District\"\n              id=\"district\"\n              type=\"text\"\n              className=\"validate\"\n              name=\"district\"\n              onChange={this.handleFieldChange}\n            />\n            <label htmlFor=\"district\">District</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"city-field input-field\">\n            <input\n              placeholder=\"City\"\n              id=\"city\"\n              type=\"text\"\n              className=\"validate\"\n              onChange={this.handleFieldChange}\n              name=\"city\" />\n            <label htmlFor=\"city\">City</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"street-field input-field\">\n            <input\n              placeholder=\"Street\"\n              id=\"street\"\n              type=\"text\"\n              className=\"validate\"\n              onChange={this.handleFieldChange}\n              name=\"street\" />\n            <label htmlFor=\"street\">Street</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"building-field input-field\">\n            <input\n              placeholder=\"Building\"\n              id=\"building\"\n              type=\"text\"\n              className=\"validate\"\n              onChange={this.handleFieldChange}\n              name=\"building\" />\n            <label htmlFor=\"building\">Building</label>\n          </div>\n          <div className=\"flat-field input-field\">\n            <input\n              placeholder=\"Flat\"\n              id=\"flat\"\n              type=\"text\"\n              className=\"validate\"\n              onChange={this.handleFieldChange}\n              name=\"flat\" />\n            <label htmlFor=\"flat\">flat</label>\n          </div>\n          <div className=\"room-field input-field\">\n            <input\n              placeholder=\"Room\"\n              id=\"room\"\n              type=\"text\"\n              className=\"validate\"\n              onChange={this.handleFieldChange}\n              name=\"room\" />\n            <label htmlFor=\"room\">Room</label>\n          </div>\n          <div className=\"spacer\" />\n        </div>\n        <button\n          className=\"waves-effect waves-light purple darken-4 order-btn btn\"\n          onClick={this.proceedOrder}\n        >make order ({this.props.total}$)</button>\n      </div>\n    )\n  }\n}\n\nexport default Address\n","import React from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport './Bill.scss'\nimport {useDispatch} from \"react-redux\";\nimport {clearCart} from \"../../redux/actions\";\n\nconst Bill = ({ total, address, pizzaDetails }) => {\n  const history = useHistory()\n  const dispatch = useDispatch();\n\n  const goToCatalog = () => {\n    history.push('/menu')\n    dispatch(clearCart())\n  }\n\n  return (\n    <div className=\"bill\">\n      <h2>Your order has been moved to delivery service</h2>\n      <h3>Thank you for choosing us!</h3>\n      <h5>Here is your bill:</h5>\n      <div className=\"bill-details\">\n        <h6>Address:</h6>\n        <div className=\"address\">\n          {address}\n        </div>\n        <h6>Pizza details:</h6>\n        <div className=\"pizza-details\">\n          {pizzaDetails.map(pizza => {\n            return <span className=\"pizza-row\" key={pizza._id}\n            >pizza: {pizza.name}, weight: {pizza.weight}, cost: {pizza.cost}\n            </span>\n          })}\n        </div>\n        <h5>Total: {total}$</h5>\n      </div>\n      <button\n        className=\"waves-effect waves-light purple darken-4 catalog-btn btn\"\n        onClick={goToCatalog}\n      >return to catalog</button>\n    </div>\n  )\n}\n\nexport default Bill\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport Address from \"../../components/address/Address\";\nimport Bill from \"../../components/bill/Bill\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nconst MakeOrder = ({ cart, userId, token }) => {\n  const savedCart = cart;\n  const { request } = useHttp();\n  const [isComplete, setIsComplete] = useState(false)\n  const [address, setAddress] = useState(null)\n\n\n  const total = cart.reduce((sum, pizza) => {\n    return sum + pizza.cost\n  }, 0)\n\n  const onAddressFilled = async addressObject => {\n    const addressStr = '' + (addressObject.country ? addressObject.country + ', ': '') +\n      (addressObject.district ? addressObject.district + ' district, ': '') +\n      (addressObject.city ? addressObject.city + ', ': '') +\n      (addressObject.street ? addressObject.street + ' st, ': '') +\n      (addressObject.building ? addressObject.building + ' building, ': '') +\n      (addressObject.flat ? addressObject.flat + ' flat, ': '') +\n      (addressObject.room ? addressObject.room + ' room': '')\n    setIsComplete(true)\n    setAddress(addressStr)\n\n    const orderData = {\n      address: addressStr,\n      total,\n      userId,\n      order: []\n    }\n\n    orderData.order = cart.map(pizzaItem => {\n      return pizzaItem._id\n    })\n\n    await request('/api/orders/save', 'POST', {\n      ...orderData\n    })\n  }\n\n  if (!isComplete) {\n    return <Address total={total} setAddress={onAddressFilled}/>\n  }\n\n  return <Bill address={address} pizzaDetails={savedCart} total={total}/>\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart,\n  token: state.token,\n  userId: state.userId\n})\n\nexport default connect(mapStateToProps)(MakeOrder)\n","import React from \"react\";\nimport './OrderBox.scss'\nimport {connect} from \"react-redux\";\n\nconst OrderBox = ({ order, pizza }) => {\n  return (\n    <div className=\"order-box\">\n      <span>Address: {order.address}</span>\n      <span>Total: {order.total}$</span>\n      <h6>Pizza:</h6>\n      {order.order.map(pizzaId => {\n        const currentPizza = pizza.find(item => item._id === pizzaId)\n        return <div className=\"pizza-row\" key={pizzaId}>\n          <img src={currentPizza.photoUrl} alt=\"\"/>\n          <span className=\"pizza-name\">{currentPizza.name}</span>\n          <span className=\"pizza-weight\">{currentPizza.weight}g</span>\n          <span className=\"pizza-cost purple darken-4\">{currentPizza.cost}$</span>\n        </div>\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  pizza: state.pizza\n})\n\n\nexport default connect(mapStateToProps)(OrderBox)\n","import React, {useEffect, useState} from \"react\";\nimport './Orders.scss'\nimport {connect, useDispatch} from \"react-redux\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {Loader} from \"../../components/loader/Loader\";\nimport OrderBox from \"../../components/order-box/OrderBox\";\nimport {getAllPizza} from \"../../redux/actions\";\n\nconst Orders = ({ userId, pizza, getAllPizza }) => {\n  const [orders, setOrders] = useState([])\n  const {request} = useHttp()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    async function fetchOrders() {\n      const fetchedOrders = await request('/api/orders/getAll', 'POST', {\n        userId\n      })\n\n      if (!orders.length) {\n        setOrders(fetchedOrders)\n      }\n    }\n\n    if (!pizza.length) {\n      dispatch(getAllPizza(request))\n    }\n\n    fetchOrders()\n  }, [])\n\n  if (!orders.length) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"orders-area\">\n      <h3>Your orders</h3>\n      {orders.map(order => {\n        return <OrderBox order={order} key={order._id} />\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  userId: state.userId,\n  pizza: state.pizza\n})\n\nconst mapDispatchToProps = {\n  getAllPizza\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React, {useEffect, useState} from 'react'\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useHistory} from 'react-router-dom'\nimport {useMessage} from \"../../hooks/message.hook\";\nimport {login} from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst AuthPage = ({ login }) => {\n  const history = useHistory()\n\n  const {loading, request, error, clearError} = useHttp()\n  const message = useMessage()\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  })\n\n  useEffect(() => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n  useEffect(() => {\n    window.M.updateTextFields()\n  }, [])\n\n  const changeHandler = event => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', {...form})\n      message(data.message)\n    } catch (e) {\n    }\n  }\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', {...form})\n      const userObject = {token: data.token, userId: data.userId}\n      login(userObject)\n      localStorage.setItem('userData', JSON.stringify(userObject))\n      history.push('/')\n    } catch (e) {\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <h1>Innoscripta Pizza Delivery</h1>\n        <div className=\"card blue darken-1\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Authorization</span>\n            <div>\n              <div className=\"input-field\">\n                <input\n                  placeholder=\"Type Email\"\n                  id=\"email\"\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"yellow-input\"\n                  value={form.email}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n              <div className=\"input-field\">\n                <input\n                  placeholder=\"Type password\"\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"yellow-input\"\n                  value={form.password}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-action\">\n            <button\n              className=\"btn yellow darken-4\"\n              style={{ marginRight: 10 }}\n              disabled={loading}\n              onClick={loginHandler}\n            >\n              Log In\n            </button>\n            <button\n              className=\"btn grey lighten-1 black-text\"\n              onClick={registerHandler}\n              disabled={loading}\n            >\n              Registration\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  login\n}\n\nexport default connect(null, mapDispatchToProps)(AuthPage)\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './App.css';\nimport 'materialize-css'\nimport {useRoutes} from \"./routes\";\nimport {connect} from \"react-redux\";\nimport {login} from \"./redux/actions\";\n\nconst App = ({ login }) => {\n  const data = JSON.parse(localStorage.getItem('userData'))\n\n  if (data && data.token) {\n    login({token: data.token, userId: data.userId})\n  }\n\n  const routes = useRoutes();\n\n  return (\n    <Router>\n      <div>\n        {routes}\n      </div>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token,\n    pizza: state.pizza\n  }\n}\n\nconst mapDispatchToProps = {\n  login\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from \"react\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport MenuPage from \"./pages/menu/MenuPage\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Cart from \"./pages/cart/Cart\";\nimport MakeOrder from \"./pages/make-order/MakeOrder\";\nimport Orders from \"./pages/orders/Orders\";\nimport AuthPage from \"./pages/auth/AuthPage\";\n\nexport const useRoutes = () => {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route path=\"/menu\" exact>\n          <MenuPage />\n        </Route>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n        <Route path=\"/make-order\">\n          <MakeOrder />\n        </Route>\n        <Route path=\"/orders\">\n          <Orders />\n        </Route>\n        <Route path=\"/login\">\n          <AuthPage />\n        </Route>\n        <Redirect to=\"/menu\" />\n      </Switch>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  ADD_TO_CART, CLEAR_CART,\n  GET_ALL_PIZZA_LOADED,\n  LOGIN, LOGOUT, REMOVE_FROM_CART\n} from \"./types\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  pizza: [],\n  cart: []\n}\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        token: action.payload.token,\n        userId: action.payload.userId\n      }\n    case LOGOUT:\n      localStorage.removeItem('userData')\n      return {\n        ...state,\n        token: null,\n        userId: null\n      }\n    case GET_ALL_PIZZA_LOADED:\n      return {\n        ...state,\n        pizza: action.payload\n      }\n    case ADD_TO_CART:\n      const newExtendedCart = [...state.cart, action.payload]\n      localStorage.setItem('cartPizzaIds', JSON.stringify(newExtendedCart.map(item => item._id)))\n      return {\n        ...state,\n        cart: newExtendedCart\n      }\n    case REMOVE_FROM_CART:\n      const newCollapsedCart = state.cart.filter(item => item._id !== action.payload._id)\n      localStorage.setItem('cartPizzaIds', JSON.stringify(newCollapsedCart.map(item => item._id)))\n      return {\n        ...state,\n        cart: newCollapsedCart\n      }\n    case CLEAR_CART:\n      localStorage.removeItem('cartPizzaIds')\n      return {\n        ...state,\n        cart: []\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {rootReducer} from \"./redux/reducer\";\nimport {Provider} from 'react-redux';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\n    : f => f\n))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nrender(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}